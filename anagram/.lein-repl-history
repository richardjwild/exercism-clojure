(sort "aweofncpoimg")
(apply str (sort "aweofncpoimg"))
(assoc ["foo" "bar"] "baz")
(conj ["foo" "bar"] "baz")
(defn sort-alphabetically [char-seq]
(defn sort-string [s]
  (apply str (sort s))
)
(sort-string "richard")
(defn are-anagrams [s1 s2]
(= (sort-string s1) (sort-string s2)))
(are-anagrams "listen" "enlist")
(are-anagrams "listen" "string")
(conj ["foo" "bar"] "baz")
(conj [] "foo")
(conj ["foo" "bar"] ["fred" "sheila"])
(first ["foo" "bar" "baz"])
(rest ["foo" "bar" "baz"])
(list ["foo" "bar" "baz"])
(conj "foo" ["bar" "baz"])
(into [] (list "foo" "bar" "baz"))
(into [] (list "foo" "bar" nil "baz"))
(into [] (remove nil? (list "foo" "bar" nil "baz")))
(vec (remove nil? (list "foo" "bar" nil "baz")))
